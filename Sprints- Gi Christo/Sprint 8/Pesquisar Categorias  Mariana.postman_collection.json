{
	"info": {
		"_postman_id": "9cf80fff-87f4-43e0-8f36-6e329656987d",
		"name": "Pesquisar Categorias  Mariana",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27453442"
	},
	"item": [
		{
			"name": "Pesquisar Categoria respeitando os critérios de aceite",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ok está dentro dos criterios de aceite\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURLMari}}",
					"host": [
						"{{BaseURLMari}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excedendo o limite de caracteres",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Validanado o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O campo deve conter até 128 caracteres\");\r",
							"});\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURLMari}}?nome=gieuedjdjdkdkkkdkdkdkgkskgsjgsgçsgksdgmsfbladlçbfslblsfblsflsfblsflçbsfkçbçsfbmsflbsflvslbslvlsfvlmsfvadvsfvvfvlçsfvsdvfvsddlvsdd",
					"host": [
						"{{BaseURLMari}}"
					],
					"query": [
						{
							"key": "nome",
							"value": "gieuedjdjdkdkkkdkdkdkgkskgsjgsgçsgksdgmsfbladlçbfslblsfblsflsfblsflçbsfkçbçsfbmsflbsflvslbslvlsfvlmsfvadvsfvvfvlçsfvsdvfvsddlvsdd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Não colocando o minimo de 3 caracteres",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Para validar o status code\r",
							"\r",
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se apresenra a mensagem que ultrapassou o limite de caracteres\r",
							"  \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O campo não pode ter menos que 3 caracteres\");\r",
							"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURLMari}}?nome=gi",
					"host": [
						"{{BaseURLMari}}"
					],
					"query": [
						{
							"key": "nome",
							"value": "gi"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pesquisando em ordem crescente.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Para validar o status code\r",
							"\r",
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURLMari}}?crescente=true",
					"host": [
						"{{BaseURLMari}}"
					],
					"query": [
						{
							"key": "crescente",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pesquisando em ordem decrescente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Para validar o status code\r",
							"\r",
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"  \r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURLMari}}?decrescente=true",
					"host": [
						"{{BaseURLMari}}"
					],
					"query": [
						{
							"key": "decrescente",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pesquisar com filtros diferentes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Para validar o status code\r",
							"\r",
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se apresenra a mensagem que ultrapassou o limite de caracteres\r",
							"  \r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURLMari}}?decrescente=true&status=true",
					"host": [
						"{{BaseURLMari}}"
					],
					"query": [
						{
							"key": "decrescente",
							"value": "true"
						},
						{
							"key": "status",
							"value": "true"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var resposta = pm.response.json();",
					" pm.environment.set(\"Nome Categoria\",resposta.nome);",
					" pm.environment.set(\"Status da categoria\",resposta.status);",
					"  pm.environment.set(\"DataCriação\",resposta.dataDeCriacao);",
					"   pm.environment.set(\"Datamodificação\",resposta.dataDeModificacao);",
					"   pm.environment.set(\"Id da Categoria\",resposta.id);",
					"  ",
					"  "
				]
			}
		}
	]
}