{
	"info": {
		"_postman_id": "6a1e97e4-4b5c-431a-ab3a-94bee6e38b1f",
		"name": "Cadastrar Categorias- Rick",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27453442"
	},
	"item": [
		{
			"name": "Cadastrando uma categoria corretamente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"\r",
							"    \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n    \"nome\": \"Roupa nova\",\r\n    \"status\": true\r\n\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLRick}}",
					"host": [
						"{{BaseURLRick}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excedendo o limite de caracteres",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O nome não pode conter mais de 128 caracteres\");\r",
							"});\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"gieuedjdjdkdkkkdkdkdkgkskgsjgsgçsgksdgmsfbladlçbfslblsfblsflsfblsflçbsfkçbçsfbmsflbsflvslbslvlsfvlmsfvadvsfvvfvlçsfvsdvfvsddlvsdd\",\r\n  \"status\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLRick}}",
					"host": [
						"{{BaseURLRick}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Utilizando caracteres especiais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O nome não aceita caracteres especiais.\");\r",
							"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"&&**&&\",\r\n  \"status\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLRick}}",
					"host": [
						"{{BaseURLRick}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Utilizando números",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O nome não aceita caracteres especiais.\");\r",
							"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"223443333\",\r\n  \"status\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLRick}}",
					"host": [
						"{{BaseURLRick}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Inserindo categoria com nome já cadastrado.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O nome cadastrado já existe.\");\r",
							"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Brinquedos\",\r\n  \"status\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLRick}}",
					"host": [
						"{{BaseURLRick}}"
					]
				}
			},
			"response": []
		}
	]
}