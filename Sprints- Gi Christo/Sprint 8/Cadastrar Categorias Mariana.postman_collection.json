{
	"info": {
		"_postman_id": "612900b2-3d7d-42f4-b0b5-c65a252d16d7",
		"name": "Cadastrar Categorias Mariana",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27453442"
	},
	"item": [
		{
			"name": "Cadastrando uma categoria corretamente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Roupe\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLMari}}",
					"host": [
						"{{BaseURLMari}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excedendo o limite de caracteres",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O campo deve conter até 128 caracteres\");\r",
							"});\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"kieuedjdjdkdkkkdkdkdkgkskgsjgsgçsgksdgmsfbladlçbfslblsfblsflsfblsflçbsfkçbçsfbmsflbsflvslbslvlsfvlmsfvadvsfvvfvlçsfvsdvfvsddlvsdd\"\r\n  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLMari}}",
					"host": [
						"{{BaseURLMari}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Utilizando caracteres especiais",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O campo deve conter apenas caracteres do alfabeto\");\r",
							"});\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"%%$$##@@@\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLMari}}",
					"host": [
						"{{BaseURLMari}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Utilizando números",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"O campo deve conter apenas caracteres do alfabeto\");\r",
							"});\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"6655443322\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLMari}}",
					"host": [
						"{{BaseURLMari}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Inserindo categoria com nome já cadastrado.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando o Status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"//validação correta do texto string 2000 milisegundos\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"\r",
							"\r",
							"//validação para ver se ultrapassou o limite de caracteres\r",
							"    \r",
							"pm.test(\"Validando o texto esperado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Já existe uma Categoria com o mesmo nome\");\r",
							"});\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Roupinhas\"\r\n \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURLMari}}",
					"host": [
						"{{BaseURLMari}}"
					]
				}
			},
			"response": []
		}
	]
}